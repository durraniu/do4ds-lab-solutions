---
title: "Model"
format:
  html:
    code-fold: true
---

```{python}
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
import duckdb
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

## Get Data

```{python}
# get data
penguins_df = penguins.load_penguins().dropna()

# create a connection
con = duckdb.connect('my-db.duckdb')
# save penguins data as a table in db
con.sql("CREATE TABLE penguins AS SELECT * FROM penguins_df")

# make a df from the duckdb table
df = con.execute("SELECT * FROM penguins").fetchdf()

# close the connection
con.close()

df.head(3)
```

## Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

## Turn into Vetiver Model

```{python}
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
```

## Save to Board

```{python}
from pins import board_folder
from vetiver import vetiver_pin_write

model_board = board_folder("./data/model", allow_pickle_read = True)
vetiver_pin_write(model_board, v)
```

## Get the pinned model

```{python}
b = board_folder('./data/model', allow_pickle_read = True)
v = VetiverModel.from_pin(b, 'penguin_model')
```


## Turn model into API

```{python}
from vetiver import VetiverAPI
app = VetiverAPI(v, check_prototype = True)
app.run(port = 8080)
```